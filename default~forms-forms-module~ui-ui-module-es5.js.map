{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/badge.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js"],"names":["_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","MatAutocomplete","_changeDetectorRef","_elementRef","defaults","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","nativeElement","length","_setVisibilityClasses","markForCheck","event","classList","value","split","reduce","className","trim","ɵfac","MatAutocomplete_Factory","t","ɵcmp","type","selectors","contentQueries","MatAutocomplete_ContentQueries","dirIndex","_t","optionGroups","viewQuery","MatAutocomplete_Query","template","first","hostAttrs","inputs","disableRipple","panelWidth","outputs","exportAs","features","provide","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","ctorParameters","undefined","decorators","args","propDecorators","descendants","selector","None","OnPush","host","providers","MatAutocompleteOrigin","elementRef","MatAutocompleteOrigin_Factory","ɵdir","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","asObservable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","overlayRef","_portal","create","_getOverlayConfig","keydownEvents","altKey","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","tabOut","_getOutsideClickStream","detachments","MatAutocompleteTrigger_Factory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","ɵmod","ɵinj","MatAutocompleteModule_Factory","imports","ngJitMode","declarations","exports","nextId","MatBadgeBase","_MatBadgeMixinBase","MatBadge","_ngZone","_ariaDescriber","_renderer","_animationMode","_hasContent","_color","_overlap","size","_id","nodeType","ELEMENT_NODE","indexOf","contentChange","currentValue","_updateTextContent","badgeElement","_badgeElement","description","removeDescription","destroyNode","_createBadgeElement","textContent","content","createElement","activeClass","contentClass","_clearExistingBadges","setAttribute","add","appendChild","requestAnimationFrame","newDescription","oldDescription","describe","colorPalette","remove","cssClass","childCount","children","currentChild","removeChild","_setColor","val","_description","_updateHostAriaDescription","removeAttribute","_hidden","MatBadge_Factory","MatBadge_HostBindings","overlap","isAbove","isAfter","hidden","color","String","MatBadgeModule","MatBadgeModule_Factory","MatChipSelectionChange","isUserInput","MAT_CHIP_REMOVE","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MatChipBase","_MatChipMixinBase","MatChipAvatar","MatChipAvatar_Factory","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","platform","globalRippleOptions","animationMode","tabIndex","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","document","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","parseInt","basicChipAttrName","hasAttribute","tagName","toLowerCase","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","removable","selectable","toggleSelected","run","coercedValue","_value","MatChip_Factory","MatChip_ContentQueries","avatar","trailingIcon","removeIcon","MatChip_HostBindings","MatChip_click_HostBindingHandler","_handleClick","MatChip_keydown_HostBindingHandler","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","MatChipRemove","_parentChip","nodeName","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","nextUniqueId","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","_required","ariaOrientation","valueChange","valueAccessor","chips","withVerticalOrientation","withHorizontalOrientation","dir","_allowFocusEscape","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","updateErrorState","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","join","_setSelectionByValue","_originatesFromChip","focused","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","Math","min","input","_clearSelection","Array","isArray","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","clear","fallbackValue","valueToEmit","_hasFocusedChip","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","some","empty","writeValue","placeholder","_placeholder","MatChipList_Factory","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","_keydown","role","required","errorState","compareWith","errorStateMatcher","MatChipList_Template","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_inputElement","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","separators","has","registerInput","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","invalid","chipList","CHIP_DECLARATIONS","ɵ0","MatChipsModule","MatChipsModule_Factory","useValue","MatProgressSpinner__svg_circle_1_Template","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","_diameter","_fallbackAnimation","mode","trackedDiameters","_diameters","head","set","Set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","animationClass","styleRoot","currentDiameter","diameters","diametersForElement","get","styleTag","_getAnimationText","replace","_strokeWidth","newValue","max","viewBox","PI","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_viewBox","WeakMap","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","MatSliderChange","MatSliderBase","_MatSliderMixinBase","_focusMonitor","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_vertical","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","_pointerDown","isTouchEvent","button","oldValue","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_pointerPositionOnStart","_emitInputEvent","_emitChangeEvent","_pointerMove","_pointerUp","pointerPositionOnStart","currentPointerPosition","_removeGlobalEvents","x","y","_windowBlur","_blurHostElement","_getDirection","vertical","_invertAxis","monitor","origin","stopMonitoring","_getSliderDimensions","_updateTickIntervalPercent","_increment","triggerEvent","isTouch","moveEventName","endEventName","numSteps","_clamp","step","pos","offset","top","left","height","posComponent","percent","_shouldInvertMouseCoords","exactValue","_calculateValue","closestValue","round","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","percentage","_sliderWrapper","blur","v","_calculatePercentage","_roundToDecimal","pop","toFixed","invert","_isMinValue","thumbLabel","axis","scale","sign","transform","_thumbGap","display","tickSize","backgroundSize","rotate","side","invertOffset","MatSlider_Factory","MatSlider_Query","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","MatSlider_blur_HostBindingHandler","MatSlider_keydown_HostBindingHandler","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","MatSlider_Template","_trackBackgroundStyles","_trackFillStyles","_ticksContainerStyles","_ticksStyles","_thumbContainerStyles","displayValue","point","touches","changedTouches","clientX","clientY","MatSliderModule","MatSliderModule_Factory"],"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","file":"default~forms-forms-module~ui-ui-module-es5.js","sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/** The height of each autocomplete option. */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/** The total height of the autocomplete panel. */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     */\n    _scrollToOption() {\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = 'mat-autocomplete-panel-above';\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [CdkScrollableModule, MatAutocomplete, MatOptionModule, MatAutocompleteTrigger, MatAutocompleteOrigin, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    CdkScrollableModule,\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { isDevMode, Directive, NgZone, ElementRef, Renderer2, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/** @docs-private */\nclass MatBadgeBase {\n}\nconst _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/** Directive to display a text badge. */\nclass MatBadge extends _MatBadgeMixinBase {\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        /** Whether the badge has any content. */\n        this._hasContent = false;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        if (isDevMode()) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() { return this._color; }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** Whether the badge should overlap its contents or not */\n    get overlap() { return this._overlap; }\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() { return this._description; }\n    set description(newDescription) {\n        if (newDescription !== this._description) {\n            const badgeElement = this._badgeElement;\n            this._updateHostAriaDescription(newDescription, this._description);\n            this._description = newDescription;\n            if (badgeElement) {\n                newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                    badgeElement.removeAttribute('aria-label');\n            }\n        }\n    }\n    /** Whether the badge is hidden. */\n    get hidden() { return this._hidden; }\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    ngOnChanges(changes) {\n        const contentChange = changes['content'];\n        if (contentChange) {\n            const value = contentChange.currentValue;\n            this._hasContent = value != null && `${value}`.trim().length > 0;\n            this._updateTextContent();\n        }\n    }\n    ngOnDestroy() {\n        const badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    /** Injects a span element into the DOM with the content. */\n    _updateTextContent() {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this.content;\n        }\n        return this._badgeElement;\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        const contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this.content;\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Sets the aria-label property on the element */\n    _updateHostAriaDescription(newDescription, oldDescription) {\n        // ensure content available before setting label\n        const content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        if (colorPalette !== this._color) {\n            if (this._color) {\n                this._elementRef.nativeElement.classList.remove(`mat-badge-${this._color}`);\n            }\n            if (colorPalette) {\n                this._elementRef.nativeElement.classList.add(`mat-badge-${colorPalette}`);\n            }\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges(cssClass) {\n        const element = this._elementRef.nativeElement;\n        let childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            const currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    }\n}\nMatBadge.ɵfac = function MatBadge_Factory(t) { return new (t || MatBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatBadge.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatBadge, selectors: [[\"\", \"matBadge\", \"\"]], hostAttrs: [1, \"mat-badge\"], hostVars: 20, hostBindings: function MatBadge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-badge-overlap\", ctx.overlap)(\"mat-badge-above\", ctx.isAbove())(\"mat-badge-below\", !ctx.isAbove())(\"mat-badge-before\", !ctx.isAfter())(\"mat-badge-after\", ctx.isAfter())(\"mat-badge-small\", ctx.size === \"small\")(\"mat-badge-medium\", ctx.size === \"medium\")(\"mat-badge-large\", ctx.size === \"large\")(\"mat-badge-hidden\", ctx.hidden || !ctx._hasContent)(\"mat-badge-disabled\", ctx.disabled);\n    } }, inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], position: [\"matBadgePosition\", \"position\"], size: [\"matBadgeSize\", \"size\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], description: [\"matBadgeDescription\", \"description\"], hidden: [\"matBadgeHidden\", \"hidden\"], content: [\"matBadge\", \"content\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatBadge.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: AriaDescriber },\n    { type: Renderer2 },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatBadge.propDecorators = {\n    color: [{ type: Input, args: ['matBadgeColor',] }],\n    overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n    position: [{ type: Input, args: ['matBadgePosition',] }],\n    content: [{ type: Input, args: ['matBadge',] }],\n    description: [{ type: Input, args: ['matBadgeDescription',] }],\n    size: [{ type: Input, args: ['matBadgeSize',] }],\n    hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadge, [{\n        type: Directive,\n        args: [{\n                selector: '[matBadge]',\n                inputs: ['disabled: matBadgeDisabled'],\n                host: {\n                    'class': 'mat-badge',\n                    '[class.mat-badge-overlap]': 'overlap',\n                    '[class.mat-badge-above]': 'isAbove()',\n                    '[class.mat-badge-below]': '!isAbove()',\n                    '[class.mat-badge-before]': '!isAfter()',\n                    '[class.mat-badge-after]': 'isAfter()',\n                    '[class.mat-badge-small]': 'size === \"small\"',\n                    '[class.mat-badge-medium]': 'size === \"medium\"',\n                    '[class.mat-badge-large]': 'size === \"large\"',\n                    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                    '[class.mat-badge-disabled]': 'disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber }, { type: ɵngcc0.Renderer2 }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matBadgePosition']\n        }], size: [{\n            type: Input,\n            args: ['matBadgeSize']\n        }], color: [{\n            type: Input,\n            args: ['matBadgeColor']\n        }], overlap: [{\n            type: Input,\n            args: ['matBadgeOverlap']\n        }], description: [{\n            type: Input,\n            args: ['matBadgeDescription']\n        }], hidden: [{\n            type: Input,\n            args: ['matBadgeHidden']\n        }], content: [{\n            type: Input,\n            args: ['matBadge']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBadgeModule {\n}\nMatBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBadgeModule });\nMatBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBadgeModule_Factory(t) { return new (t || MatBadgeModule)(); }, imports: [[\n            A11yModule,\n            MatCommonModule\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBadgeModule, { declarations: function () { return [MatBadge]; }, imports: function () { return [A11yModule,\n        MatCommonModule]; }, exports: function () { return [MatBadge, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadgeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    MatCommonModule\n                ],\n                exports: [MatBadge, MatCommonModule],\n                declarations: [MatBadge]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n\n//# sourceMappingURL=badge.js.map","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChip when selected or deselected. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' },\n                providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }]\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' },\n                providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }]\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, \n    // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n    _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Whether the chip is selected. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() { return this._removable; }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MAT_CHIP_AVATAR,] }],\n    trailingIcon: [{ type: ContentChild, args: [MAT_CHIP_TRAILING_ICON,] }],\n    removeIcon: [{ type: ContentChild, args: [MAT_CHIP_REMOVE,] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MAT_CHIP_AVATAR]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_TRAILING_ICON]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_REMOVE]\n        }] }); })();\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }])] });\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                },\n                providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }]\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, \n    /** @docs-private */\n    ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() { return this.empty ? null : 'listbox'; }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._value; }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() { return this._selectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            let input = element;\n            return !input.value;\n        }\n        return false;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /** Whether the input is disabled. */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether the input is empty. */\n    get empty() { return !this._inputElement.value; }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        const separators = this.separatorKeyCodes;\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = {\n    separatorKeyCodes: [ENTER]\n};\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ɵ0\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon], exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ɵ0\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 };\n\n//# sourceMappingURL=chips.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    get _viewBox() {\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /** The dash offset of the svg circle. */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                const oldValue = this.value;\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = this.value;\n                this._pointerPositionOnStart = pointerPosition;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                    this._emitChangeEvent();\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding) {\n                const pointerPositionOnStart = this._pointerPositionOnStart;\n                const currentPointerPosition = getPointerPositionOnPage(event);\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled &&\n                    pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n                    pointerPositionOnStart.y !== currentPointerPosition.y)) {\n                    this._emitChangeEvent();\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    get _trackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    get _trackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    get _ticksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    get _ticksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            let side;\n            if (this.vertical) {\n                side = this._invertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = this._invertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    get _thumbContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 28, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); }, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map"]}