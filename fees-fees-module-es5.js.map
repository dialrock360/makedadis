{"version":3,"sources":["webpack:///src/app/fees/add-fees/add-fees.component.ts","webpack:///src/app/fees/add-fees/add-fees.component.html","webpack:///src/app/fees/all-fees/all-fees.component.ts","webpack:///src/app/fees/all-fees/all-fees.component.html","webpack:///src/app/fees/all-fees/dialogs/delete/delete.component.ts","webpack:///src/app/fees/all-fees/dialogs/delete/delete.component.html","webpack:///src/app/fees/all-fees/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/fees/all-fees/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/fees/all-fees/fees.model.ts","webpack:///src/app/fees/edit-fees/edit-fees.component.ts","webpack:///src/app/fees/edit-fees/edit-fees.component.html","webpack:///src/app/fees/fee-receipt/fee-receipt.component.ts","webpack:///src/app/fees/fee-receipt/fee-receipt.component.html","webpack:///src/app/fees/fees-routing.module.ts","webpack:///src/app/fees/fees.module.ts"],"names":["AddFeesComponent","fb","feesForm","group","rollNo","required","sName","fType","department","date","invoiceNo","pType","status","amount","duration","details","console","log","value","onSubmit","selector","templateUrl","styleUrls","$event","stopPropagation","selection","AllFeesComponent","httpClient","dialog","feesService","snackBar","displayedColumns","contextMenuPosition","x","y","loadData","dialogRef","open","data","fees","action","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","removeSelectedRows","addNew","refresh","_exampleDatabase","_paginator","_sort","_filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllFeess","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","next","DeleteDialogComponent","close","deleteFees","confirmDelete","onNoClick","FormDialogComponent","formControl","dialogTitle","createContactForm","hasError","addFees","getRawValue","provide","useValue","confirmAdd","providers","Fees","getRandomID","Date","S4","Math","random","toString","substring","EditFeesComponent","formdata","FeeReceiptComponent","routes","path","component","FeesRoutingModule","forChild","imports","exports","FeesModule","declarations"],"mappings":"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","file":"fees-fees-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-fees',\r\n  templateUrl: './add-fees.component.html',\r\n  styleUrls: ['./add-fees.component.sass']\r\n})\r\nexport class AddFeesComponent {\r\n  feesForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.feesForm = this.fb.group({\r\n      rollNo: ['', [Validators.required]],\r\n      sName: ['', [Validators.required]],\r\n      fType: ['', [Validators.required]],\r\n      department: ['', [Validators.required]],\r\n      date: ['', [Validators.required]],\r\n      invoiceNo: ['', [Validators.required]],\r\n      pType: ['', [Validators.required]],\r\n      status: ['', [Validators.required]],\r\n      amount: ['', [Validators.required]],\r\n      duration: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.feesForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Fees</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Fees Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Fees Details</h2>\r\n                        <ul class=\"header-dropdown m-r--5\">\r\n                            <li class=\"dropdown\">\r\n                                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\"\r\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i class=\"material-icons\">more_vert</i>\r\n                                </a>\r\n                                <ul class=\"dropdown-menu pull-right\">\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Another action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Something else here</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Roll No</mat-label>\r\n                                        <input matInput formControlName=\"rollNo\" required>\r\n                                        <mat-icon matSuffix>label</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                                            Please enter roll no\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Student Name</mat-label>\r\n                                        <input matInput formControlName=\"sName\" required>\r\n                                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                                            Please enter student name\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Select Department</mat-label>\r\n                                        <mat-select formControlName=\"department\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                                        <mat-label>Fees Type</mat-label>\r\n                                        <mat-select formControlName=\"fType\" required>\r\n                                            <mat-option [value]=\"'annual'\">\r\n                                                Annual\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'tution'\">\r\n                                                Tution\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'transport'\">\r\n                                                Transport\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'exam'\">\r\n                                                Exam\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'library'\">\r\n                                                Library\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                                            Select Fees Type\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"m-b-20\">\r\n                                        <mat-label class=\"mr-3\">Duration:</mat-label>\r\n                                        <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\"\r\n                                            required>\r\n                                            <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\r\n                                            <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\r\n                                            <mat-radio-button value=\"session\">Session</mat-radio-button>\r\n                                            <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\r\n                                                Select Duration\r\n                                            </mat-error>\r\n                                        </mat-radio-group>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Collection Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Payment Type</mat-label>\r\n                                        <mat-select formControlName=\"pType\" required>\r\n                                            <mat-option [value]=\"'cash'\">\r\n                                                Cash\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'cheque'\">\r\n                                                Cheque\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'online transfer'\">\r\n                                                Online Transfer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'credit card'\">\r\n                                                Draft\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Invoice Number</mat-label>\r\n                                        <input matInput formControlName=\"invoiceNo\" required>\r\n                                        <mat-icon matSuffix>receipt</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                                            Enter Invoice Number\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Status</mat-label>\r\n                                        <mat-select formControlName=\"status\" required>\r\n                                            <mat-option [value]=\"'paid'\">\r\n                                                Paid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'unpaid'\">\r\n                                                Unpaid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'pending'\">\r\n                                                Pending\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Amount</mat-label>\r\n                                        <input matInput formControlName=\"amount\" required>\r\n                                        <mat-icon matSuffix>monetization_on</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                                            Enter amount\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"example-button-row\">\r\n                                        <button class=\"mr-3\" [disabled]=\"!feesForm.valid \" mat-raised-button\r\n                                            color=\"primary\">Submit</button>\r\n                                        <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FeesService } from './fees.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Fees } from './fees.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-fees',\r\n  templateUrl: './all-fees.component.html',\r\n  styleUrls: ['./all-fees.component.sass']\r\n})\r\nexport class AllFeesComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'rollNo',\r\n    'sName',\r\n    'fType',\r\n    'date',\r\n    'invoiceNo',\r\n    'pType',\r\n    'status',\r\n    'amount',\r\n    'actions'\r\n  ];\r\n  exampleDatabase: FeesService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Fees>(true, []);\r\n  id: number;\r\n  fees: Fees | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public feesService: FeesService,\r\n    private snackBar: MatSnackBar\r\n  ) { }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        fees: this.fees,\r\n        action: 'add'\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.feesService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        fees: row,\r\n        action: 'edit'\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          x => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[\r\n          foundIndex\r\n        ] = this.feesService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          x => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n        this.selection.select(row)\r\n      );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Fees>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new FeesService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup')\r\n      // .debounceTime(150)\r\n      // .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Fees) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Fees> {\r\n  _filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  filteredData: Fees[] = [];\r\n  renderedData: Fees[] = [];\r\n  constructor(\r\n    public _exampleDatabase: FeesService,\r\n    public _paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Fees[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this._exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this._filterChange,\r\n      this._paginator.page\r\n    ];\r\n    this._exampleDatabase.getAllFeess();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this._exampleDatabase.data\r\n          .slice()\r\n          .filter((fees: Fees) => {\r\n            const searchStr = (\r\n              fees.rollNo +\r\n              fees.sName +\r\n              fees.fType +\r\n              fees.date +\r\n              fees.invoiceNo +\r\n              fees.pType +\r\n              fees.status\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this._paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() { }\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Fees[]): Fees[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'rollNo':\r\n          [propertyA, propertyB] = [a.rollNo, b.rollNo];\r\n          break;\r\n        case 'sName':\r\n          [propertyA, propertyB] = [a.sName, b.sName];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case 'fType':\r\n          [propertyA, propertyB] = [a.fType, b.fType];\r\n          break;\r\n        case 'invoiceNo':\r\n          [propertyA, propertyB] = [a.invoiceNo, b.invoiceNo];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">All Feess</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Feess</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">All</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"body\">\r\n                        <div class=\"responsive_table\">\r\n                            <div class=\"materialTableHeader\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-8\">\r\n                                        <ul class=\"header-buttons-left ml-0\">\r\n                                            <li class=\"dropdown\">\r\n                                                <h2>\r\n                                                    <strong>Feess</strong></h2>\r\n                                            </li>\r\n                                            <li class=\"dropdown m-l-20\">\r\n                                                <label for=\"search-input\"><i\r\n                                                        class=\"material-icons search-icon\">search</i></label>\r\n                                                <input placeholder=\"Search\" type=\"text\" #filter\r\n                                                    class=\"browser-default search-field\" aria-label=\"Search box\">\r\n                                            </li>\r\n                                            <li>\r\n                                                <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                                                        <mat-icon class=\"col-white\">delete\r\n                                                        </mat-icon>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"col-4\">\r\n                                        <ul class=\"header-buttons\">\r\n                                            <li>\r\n                                                <div class=\"icon-button-demo\">\r\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </li>\r\n                                            <li>\r\n                                                <div class=\"icon-button-demo\">\r\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                                <!-- Checkbox Column -->\r\n                                <ng-container matColumnDef=\"select\">\r\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                            [ngClass]=\"'tbl-checkbox'\">\r\n                                        </mat-checkbox>\r\n                                    </mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                            (change)=\"$event ? selection.toggle(row) : null\"\r\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                                        </mat-checkbox>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <!-- ID Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"rollNo\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Roll No</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.rollNo}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"sName\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.sName}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"fType\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Fees Type</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.fType }}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"date\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.date | date: 'MM/dd/yyyy' }}\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"invoiceNo\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Invoice No</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.invoiceNo}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"pType\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Payment Type</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.pType}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"status\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.status}}</mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"amount\">\r\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Amount\r\n                                    </mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                                        {{row.amount}}</mat-cell>\r\n                                </ng-container>\r\n                                <!-- actions -->\r\n                                <ng-container matColumnDef=\"actions\">\r\n                                    <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\"\r\n                                            (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\">\r\n                                            <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\r\n                                            (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\">\r\n                                            <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                                        </button>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                                    [style.cursor]=\"'pointer'\" matRipple>\r\n                                </mat-row>\r\n                            </mat-table>\r\n                            <!-- context menu start -->\r\n                            <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n                            </div>\r\n                            <mat-menu #contextMenu=\"matMenu\">\r\n                                <ng-template matMenuContent let-item=\"item\">\r\n                                    <button mat-menu-item (click)=\"addNew()\">\r\n                                        <mat-icon>add_box</mat-icon>\r\n                                        <span>Add Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item (click)=\"editCall(item)\">\r\n                                        <mat-icon>create</mat-icon>\r\n                                        <span>Edit Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                                        <mat-icon>delete</mat-icon>\r\n                                        <span>Delete Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item (click)=\"refresh()\">\r\n                                        <mat-icon>refresh</mat-icon>\r\n                                        <span>Refresh Record</span>\r\n                                    </button>\r\n                                    <button mat-menu-item disabled>\r\n                                        <mat-icon>no_encryption</mat-icon>\r\n                                        <span>Disable</span>\r\n                                    </button>\r\n                                    <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                                        <mat-icon>list_alt</mat-icon>\r\n                                        <span> Nested Menu</span>\r\n                                    </button>\r\n                                </ng-template>\r\n                            </mat-menu>\r\n                            <mat-menu #nestedmenu=\"matMenu\">\r\n                                <button mat-menu-item>\r\n                                    <mat-icon>mail_outline</mat-icon>\r\n                                    <span>Item 1</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                    <mat-icon>call</mat-icon>\r\n                                    <span>Item 2</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                    <mat-icon>chat</mat-icon>\r\n                                    <span>Item 3</span>\r\n                                </button>\r\n                            </mat-menu>\r\n                            <!-- context menu end -->\r\n                            <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                                No results\r\n                            </div>\r\n                            <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\r\n                                [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FeesService } from '../../fees.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public feesService: FeesService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.feesService.deleteFees(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Roll No: </span>{{data.rollNo}}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Name: </span>{{ data.sName }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Date: </span>{{data.date | date: 'MM/dd/yyyy'}}\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Invoice No: </span>{{data.invoiceNo}}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FeesService } from '../../fees.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Fees } from '../../fees.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  feesForm: FormGroup;\r\n  fees: Fees;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public feesService: FeesService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      console.log(data.fees.date);\r\n      this.dialogTitle = data.fees.sName;\r\n      this.fees = data.fees;\r\n    } else {\r\n      this.dialogTitle = 'New Fees';\r\n      this.fees = new Fees({});\r\n    }\r\n    this.feesForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.fees.id],\r\n      rollNo: [this.fees.rollNo, [Validators.required]],\r\n      sName: [this.fees.sName, [Validators.required]],\r\n      fType: [this.fees.fType, [Validators.required]],\r\n      date: [\r\n        formatDate(this.fees.date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      invoiceNo: [this.fees.invoiceNo, [Validators.required]],\r\n      pType: [this.fees.pType, [Validators.required]],\r\n      status: [this.fees.status, [Validators.required]],\r\n      amount: [this.fees.amount, [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.feesService.addFees(this.feesForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Roll No</mat-label>\r\n                        <input matInput formControlName=\"rollNo\" required>\r\n                        <mat-icon matSuffix>label</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                            Please enter roll no\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Student Name</mat-label>\r\n                        <input matInput formControlName=\"sName\" required>\r\n                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                            Please enter student name\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                        <mat-label>Fees Type</mat-label>\r\n                        <mat-select formControlName=\"fType\" required>\r\n                            <mat-option [value]=\"'annual'\">\r\n                                Annual\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'tution'\">\r\n                                Tution\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'transport'\">\r\n                                Transport\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'exam'\">\r\n                                Exam\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'library'\">\r\n                                Library\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'other'\">\r\n                                Other\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                            Select Fees Type\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                            Please select date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Invoice Number</mat-label>\r\n                        <input matInput formControlName=\"invoiceNo\" required>\r\n                        <mat-icon matSuffix>receipt</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                            Enter Invoice Number\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Payment Type</mat-label>\r\n                        <mat-select formControlName=\"pType\" required>\r\n                            <mat-option [value]=\"'cash'\">\r\n                                Cash\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'cheque'\">\r\n                                Cheque\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'online transfer'\">\r\n                                Online Transfer\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'credit card'\">\r\n                                Draft\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'other'\">\r\n                                Other\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                            Select Payment Type\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Status</mat-label>\r\n                        <mat-select formControlName=\"status\" required>\r\n                            <mat-option [value]=\"'paid'\">\r\n                                Paid\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'unpaid'\">\r\n                                Unpaid\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'pending'\">\r\n                                Pending\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                            Select Status\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Amount</mat-label>\r\n                        <input matInput formControlName=\"amount\" required>\r\n                        <mat-icon matSuffix>monetization_on</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                            Enter amount\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { formatDate } from '@angular/common';\r\nexport class Fees {\r\n  id: number;\r\n  rollNo: string;\r\n  sName: string;\r\n  fType: string;\r\n  date: string;\r\n  invoiceNo: string;\r\n  pType: string;\r\n  status: string;\r\n  amount: string;\r\n  department: string;\r\n  duration: string;\r\n  details: string;\r\n  constructor(fees) {\r\n    {\r\n      this.id = fees.id || this.getRandomID();\r\n      this.rollNo = fees.rollNo || '';\r\n      this.sName = fees.sName || '';\r\n      this.fType = fees.fType || '';\r\n      this.date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.invoiceNo = fees.invoiceNo || '';\r\n      this.pType = fees.pType || '';\r\n      this.status = fees.status || '';\r\n      this.amount = fees.amount || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-fees',\r\n  templateUrl: './edit-fees.component.html',\r\n  styleUrls: ['./edit-fees.component.sass']\r\n})\r\nexport class EditFeesComponent {\r\n  feesForm: FormGroup;\r\n  formdata = {\r\n    rollNo: '99',\r\n    sName: 'Jenish Shah\t',\r\n    fType: 'annual',\r\n    department: 'mathematics',\r\n    date: '2020-01-04T14:22:18Z',\r\n    invoiceNo: 'IN-434454',\r\n    pType: 'cheque',\r\n    status: 'paid',\r\n    amount: '320$',\r\n    duration: 'yearly',\r\n    details: 'Annual Tution Fees'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.feesForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.feesForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      rollNo: [this.formdata.rollNo, [Validators.required]],\r\n      sName: [this.formdata.sName, [Validators.required]],\r\n      fType: [this.formdata.fType, [Validators.required]],\r\n      department: [this.formdata.department, [Validators.required]],\r\n      date: [this.formdata.date, [Validators.required]],\r\n      invoiceNo: [this.formdata.invoiceNo, [Validators.required]],\r\n      pType: [this.formdata.pType, [Validators.required]],\r\n      status: [this.formdata.status, [Validators.required]],\r\n      amount: [this.formdata.amount, [Validators.required]],\r\n      duration: [this.formdata.duration, [Validators.required]],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Fees</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Edit Fees Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Edit Fees Details</h2>\r\n                        <ul class=\"header-dropdown m-r--5\">\r\n                            <li class=\"dropdown\">\r\n                                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\"\r\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i class=\"material-icons\">more_vert</i>\r\n                                </a>\r\n                                <ul class=\"dropdown-menu pull-right\">\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Another action</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick=\"return false;\">Something else here</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Roll No</mat-label>\r\n                                        <input matInput formControlName=\"rollNo\" required>\r\n                                        <mat-icon matSuffix>label</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                                            Please enter roll no\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Student Name</mat-label>\r\n                                        <input matInput formControlName=\"sName\" required>\r\n                                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                                            Please enter student name\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Select Department</mat-label>\r\n                                        <mat-select formControlName=\"department\" required>\r\n                                            <mat-option [value]=\"'mechanical'\">\r\n                                                Mechanical\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'science'\">\r\n                                                Science\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'mathematics'\">\r\n                                                Mathematics\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'computer'\">\r\n                                                Computer\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\r\n                                            Select Any Department\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                                        <mat-label>Fees Type</mat-label>\r\n                                        <mat-select formControlName=\"fType\" required>\r\n                                            <mat-option [value]=\"'annual'\">\r\n                                                Annual\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'tution'\">\r\n                                                Tution\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'transport'\">\r\n                                                Transport\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'exam'\">\r\n                                                Exam\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'library'\">\r\n                                                Library\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                                            Select Fees Type\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"m-b-20\">\r\n                                        <mat-label class=\"mr-3\">Duration:</mat-label>\r\n                                        <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\"\r\n                                            required>\r\n                                            <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\r\n                                            <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\r\n                                            <mat-radio-button value=\"session\">Session</mat-radio-button>\r\n                                            <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\r\n                                                Select Duration\r\n                                            </mat-error>\r\n                                        </mat-radio-group>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Collection Date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                                            Please select date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Payment Type</mat-label>\r\n                                        <mat-select formControlName=\"pType\" required>\r\n                                            <mat-option [value]=\"'cash'\">\r\n                                                Cash\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'cheque'\">\r\n                                                Cheque\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'online transfer'\">\r\n                                                Online Transfer\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'credit card'\">\r\n                                                Draft\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'other'\">\r\n                                                Other\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Invoice Number</mat-label>\r\n                                        <input matInput formControlName=\"invoiceNo\" required>\r\n                                        <mat-icon matSuffix>receipt</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                                            Enter Invoice Number\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Status</mat-label>\r\n                                        <mat-select formControlName=\"status\" required>\r\n                                            <mat-option [value]=\"'paid'\">\r\n                                                Paid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'unpaid'\">\r\n                                                Unpaid\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'pending'\">\r\n                                                Pending\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                                            Select Status\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Amount</mat-label>\r\n                                        <input matInput formControlName=\"amount\" required>\r\n                                        <mat-icon matSuffix>monetization_on</mat-icon>\r\n                                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                                            Enter amount\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <div class=\"example-button-row\">\r\n                                        <button class=\"mr-3\" [disabled]=\"!feesForm.valid \" mat-raised-button\r\n                                            color=\"primary\">Submit</button>\r\n                                        <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fee-receipt',\r\n  templateUrl: './fee-receipt.component.html',\r\n  styleUrls: ['./fee-receipt.component.sass']\r\n})\r\nexport class FeeReceiptComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Receipt</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Receipt</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"white-box\">\r\n                                    <h3>\r\n                                        <b>RECEIPT</b>\r\n                                        <span class=\"pull-right\">#345766</span>\r\n                                    </h3>\r\n                                    <hr>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"pull-left\">\r\n                                                <address>\r\n                                                    <p class=\"font-bold\">BILL FROM :</p>\r\n                                                    <img src=\"assets/images/invoice_logo.png\" alt=\"logo\"\r\n                                                        class=\"logo-default\" />\r\n                                                    <p class=\"text-muted m-l-5\">\r\n                                                        Aditya University, <br> Opp. Town Hall, <br>\r\n                                                        Sardar Patel Road, <br> Ahmedabad - 380015\r\n                                                    </p>\r\n                                                </address>\r\n                                            </div>\r\n                                            <div class=\"pull-right text-right\">\r\n                                                <address>\r\n                                                    <p class=\"addr-font-h3 font-bold\">BILL TO :</p>\r\n                                                    <p class=\"font-bold addr-font-h4\">Jayesh Patel</p>\r\n                                                    <p class=\"text-muted m-l-30\">\r\n                                                        207, Prem Sagar Appt.,\r\n                                                        <br> Near Income Tax Office,\r\n                                                        <br> Ashram Road,\r\n                                                        <br> Ahmedabad - 380057\r\n                                                    </p>\r\n                                                    <p class=\"m-t-30\">\r\n                                                        <b>Invoice Date :</b>\r\n                                                        <i class=\"ml-2 fa fa-calendar\"></i> 14th July 2019\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <b>Status :</b>\r\n                                                        <span class=\"label col-green font-weight-bold\">paid</span>\r\n                                                    </p>\r\n                                                </address>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"table-responsive m-t-40\">\r\n                                                <table class=\"table table-hover\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th class=\"text-center\">#</th>\r\n                                                            <th class=\"text-right\">Fees Type</th>\r\n                                                            <th class=\"text-right\">Frequency</th>\r\n                                                            <th class=\"text-right\">Date</th>\r\n                                                            <th class=\"text-right\">Invoice number</th>\r\n                                                            <th class=\"text-right\">Amount</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td class=\"text-center\">1</td>\r\n                                                            <td class=\"text-right\">Annual Fees</td>\r\n                                                            <td class=\"text-right\">Yearly</td>\r\n                                                            <td class=\"text-right\">2016-11-19</td>\r\n                                                            <td class=\"text-right\">#IN-345609865</td>\r\n                                                            <td class=\"text-right\">$100</td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td class=\"text-center\">2</td>\r\n                                                            <td class=\"text-right\">Tuition Fees</td>\r\n                                                            <td class=\"text-right\">Monthly</td>\r\n                                                            <td class=\"text-right\">2016-11-19</td>\r\n                                                            <td class=\"text-right\">#IN-345604565</td>\r\n                                                            <td class=\"text-right\">$50</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"pull-right m-t-30 text-right\">\r\n                                                <p>Sub - Total amount: $150</p>\r\n                                                <p>Discount : $10 </p>\r\n                                                <p>Tax (10%) : $14 </p>\r\n                                                <hr>\r\n                                                <h3><b>Total :</b> $164</h3>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <hr>\r\n                                            <div class=\"text-right\">\r\n                                                <button mat-raised-button color=\"primary\"> Proceed to payment\r\n                                                </button>\r\n                                                <button onclick=\"javascript:window.print();\"\r\n                                                    class=\"btn btn-default btn-outline\" type=\"button\"> <span><i\r\n                                                            class=\"fa fa-print\"></i> Print</span> </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllFeesComponent } from './all-fees/all-fees.component';\r\nimport { AddFeesComponent } from './add-fees/add-fees.component';\r\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\r\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-fees',\r\n    component: AllFeesComponent\r\n  },\r\n  {\r\n    path: 'add-fees',\r\n    component: AddFeesComponent\r\n  },\r\n  {\r\n    path: 'edit-fees',\r\n    component: EditFeesComponent\r\n  },\r\n  {\r\n    path: 'fee-receipt',\r\n    component: FeeReceiptComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FeesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { FeesRoutingModule } from './fees-routing.module';\r\nimport { AllFeesComponent } from './all-fees/all-fees.component';\r\nimport { AddFeesComponent } from './add-fees/add-fees.component';\r\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\r\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\r\nimport { DeleteDialogComponent } from './all-fees/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-fees/dialogs/form-dialog/form-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllFeesComponent,\r\n    AddFeesComponent,\r\n    EditFeesComponent,\r\n    FeeReceiptComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FeesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxDatatableModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    MatRadioModule\r\n  ]\r\n})\r\nexport class FeesModule {}\r\n"]}